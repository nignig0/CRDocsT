cmake_minimum_required(VERSION 3.20)

project(crdt LANGUAGES CXX VERSION 1.0)

list(INSERT CMAKE_MODULE_PATH 0 ${CMAKE_SOURCE_DIR}/cmake)

file(
    GLOB HPP
    CONFIGURE_DEPENDS
    ${CMAKE_SOURCE_DIR}/src/dtype/*.hpp
    ${CMAKE_SOURCE_DIR}/src/dtype/order/*.hpp
    ${CMAKE_SOURCE_DIR}/src/utils/*.hpp
    ${CMAKE_SOURCE_DIR}/src/*.hpp
)

add_library(crdt INTERFACE)
add_library(crdt::crdt ALIAS crdt)

target_include_directories(
    crdt
    INTERFACE
        $<INSTALL_INTERFACE:include>
        $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/src>
)

if(HPP)
    target_sources(
        crdt
        INTERFACE
            FILE_SET HEADERS
                BASE_DIRS "${CMAKE_SOURCE_DIR}/src"
                FILES ${HPP}
    )
endif()

include(GNUInstallDirs)
install(
    TARGETS crdt
    EXPORT crdtTargets
    FILE_SET HEADERS DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/crdt
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
)

set_target_properties(crdt PROPERTIES EXPORT_NAME crdt)

install(
    EXPORT crdtTargets
    FILE crdtTargets.cmake
    NAMESPACE crdt::
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/crdt
)

include(CMakePackageConfigHelpers)
write_basic_package_version_file(
    ${CMAKE_BINARY_DIR}/crdtConfigVersion.cmake
    VERSION ${PROJECT_VERSION}
    COMPATIBILITY AnyNewerVersion
)

configure_package_config_file(
    ${CMAKE_SOURCE_DIR}/cmake/crdtConfig.cmake.in
    ${CMAKE_BINARY_DIR}/crdtConfig.cmake
    INSTALL_DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/crdt
)

install(
    FILES
        ${CMAKE_BINARY_DIR}/crdtConfig.cmake
        ${CMAKE_BINARY_DIR}/crdtConfigVersion.cmake
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/crdt
)

export(
    EXPORT crdtTargets
    FILE ${CMAKE_BINARY_DIR}/crdtTargets.cmake
    NAMESPACE crdt::
)

export(PACKAGE crdt)
